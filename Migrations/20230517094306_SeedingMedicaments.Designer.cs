// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Task9.Entities;

#nullable disable

namespace Task9.Migrations
{
    [DbContext(typeof(HospitalDbContex))]
    [Migration("20230517094306_SeedingMedicaments")]
    partial class SeedingMedicaments
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Task9.Entities.Medicament", b =>
                {
                    b.Property<int>("IdMedicament")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMedicament"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdMedicament")
                        .HasName("Medicament_pk");

                    b.ToTable("Medicament", (string)null);

                    b.HasData(
                        new
                        {
                            IdMedicament = 1,
                            Description = "Desc1",
                            Name = "Med1",
                            Type = "Type1"
                        },
                        new
                        {
                            IdMedicament = 2,
                            Description = "Desc2",
                            Name = "Med2",
                            Type = "Type2"
                        },
                        new
                        {
                            IdMedicament = 3,
                            Description = "Desc3",
                            Name = "Med3",
                            Type = "Type3"
                        });
                });

            modelBuilder.Entity("Task9.Entities.MedicamentPrescription", b =>
                {
                    b.Property<int>("IdMedicament")
                        .HasColumnType("int");

                    b.Property<int>("IdPrescription")
                        .HasColumnType("int");

                    b.Property<string>("Decscription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Dose")
                        .HasColumnType("int");

                    b.HasKey("IdMedicament", "IdPrescription")
                        .HasName("MedicamentPrescription_pk");

                    b.HasIndex("IdPrescription");

                    b.ToTable("Medicament_Prescription", (string)null);
                });

            modelBuilder.Entity("Task9.Entities.Prescription", b =>
                {
                    b.Property<int>("IdPrescription")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPrescription"));

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdPrescription")
                        .HasName("Prescription_pk");

                    b.ToTable("Prescription", (string)null);
                });

            modelBuilder.Entity("Task9.Entities.MedicamentPrescription", b =>
                {
                    b.HasOne("Task9.Entities.Medicament", "Medicament")
                        .WithMany("MedicamentPrescriptions")
                        .HasForeignKey("IdMedicament")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("MedicamentPrescription_Medicament");

                    b.HasOne("Task9.Entities.Prescription", "Prescription")
                        .WithMany("MedicamentPrescriptions")
                        .HasForeignKey("IdPrescription")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("MedicamentPrescription_Prescription");

                    b.Navigation("Medicament");

                    b.Navigation("Prescription");
                });

            modelBuilder.Entity("Task9.Entities.Medicament", b =>
                {
                    b.Navigation("MedicamentPrescriptions");
                });

            modelBuilder.Entity("Task9.Entities.Prescription", b =>
                {
                    b.Navigation("MedicamentPrescriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
